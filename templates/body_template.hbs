#import "{{name}}.h"

{{#models}}
@class {{name}};
{{/models}}

{{#models}}

{{#base_immutable_interface .}}
{{/base_immutable_interface}}

@implementation {{name}} {
    NSInteger __modelVersion;
}

+ ({{name}}*)create:(void(^)({{name}}Builder *builder))builderBlock
{
    {{name}}Builder *builder = [{{name}}Builder new];
    {{#props}}
    {{#if default}}
    builder.{{name}} = {{default}};
    {{/if}}
    {{/props}}
    if (builderBlock) {
        builderBlock(builder);
    }
    return [[self alloc] initWithBuilder:builder modelVersion:1];
}

- (instancetype)init
{
    return [self create:NULL];
}

- (instancetype)initWithBuilder:({{name}}Builder*)builder modelVersion:(NSInteger)modelVersion
{
    {{#init_with_builder .}}
    {{/init_with_builder}}

    if (self) {
        __modelVersion = modelVersion;
        {{#props}}
        _{{name}} = builder.{{name}};
        {{/props}}
    }

    return self;
}

- ({{name}}*)mutate:(void(^)({{name}}Builder *builder))builderBlock
{
    {{name}}Builder *builder = [{{name}}Builder new];

    {{#props}}
    builder.{{name}} = self.{{name}};
    {{/props}}

    builderBlock(builder);

    return [[[self class] alloc] initWithBuilder:builder modelVersion:__modelVersion + 1];
}

- (BOOL)isEqual:(id)other {
    if (other == self)
        return YES;
    if (!other || ![[other class] isEqual:[self class]])
        return NO;

    return [self isEqualToOther:other];
}

- (BOOL)isEqualToOther:({{name}} *)object {
    if (self == object)
        return YES;
    if (object == nil)
        return NO;
    {{#props}}
    if (self.{{name}} != object.{{name}})
        return NO;
    {{/props}}
    return YES;
}

- (NSUInteger)hash {
    NSUInteger hash = 0;
    {{#props}}
    {{#is_ref}}
    hash = hash * 31u + [self.{{name}} hash];
    {{/is_ref}}
    {{^is_ref}}
    hash = hash * 31u + (NSUInteger)self.{{name}};
    {{/is_ref}}
    {{/props}}
    return hash;
}

- (NSString *)description {
    NSMutableString *description = [NSMutableString stringWithFormat:@"<%@: ", NSStringFromClass([self class])];
    [description appendFormat:@"__modelVersion=%ld", (long)__modelVersion];
    {{#props}}
    {{#is_ref}}
    [description appendFormat:@", {{name}}=%@", self.{{name}}];
    {{/is_ref}}
    {{^is_ref}}
    [description appendFormat:@", {{name}}=%@", @(self.{{name}})];
    {{/is_ref}}
    {{/props}}
    [description appendString:@">"];
    return description;
}

- (id)initWithCoder:(NSCoder *)coder {
    {{#init_with_coder .}}
    {{/init_with_coder}}
    if (self) {
        {{#props}}
        {{#decodeProperty this}}{{/decodeProperty}}
        {{/props}}
        __modelVersion = [coder decodeIntegerForKey:@"__modelVersion"];
    }

    return self;
}

- (void)encodeWithCoder:(NSCoder *)coder {
    {{#props}}
    {{#encodeProperty this}}{{/encodeProperty}}
    {{/props}}
    [coder encodeInteger:__modelVersion forKey:@"__modelVersion"];
}

- (id)copyWithZone:(NSZone *)zone {
    {{name}} *copy = [[[self class] allocWithZone:zone] init];

    if (copy != nil) {
        copy->__modelVersion = __modelVersion + 1;
        {{#props}}
        copy->_{{name}} = _{{name}};
        {{/props}}
    }

    return copy;
}


@end

@implementation {{name}}Builder
@end

{{/models}}
